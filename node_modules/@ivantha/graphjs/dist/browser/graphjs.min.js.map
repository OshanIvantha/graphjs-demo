{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/charts/chart.js","webpack:///./src/errors/invalid-grammar-error.js","webpack:///./node_modules/es6-error/es6/index.js","webpack:///./src/errors/invalid-operation-error.js","webpack:///./src/charts/types/scatter-plot.js","webpack:///./src/charts/types/stacked-area-chart.js","webpack:///./src/charts/types/spline-chart.js","webpack:///./src/charts/types/donut-chart.js","webpack:///./src/charts/types/stacked-bar-chart.js","webpack:///./src/charts/types/area-chart.js","webpack:///./src/charts/types/multiple-xy-line-chart.js","webpack:///./src/charts/types/pie-chart.js","webpack:///./src/charts/types/bar-chart.js","webpack:///./src/charts/types/step-chart.js","webpack:///./src/charts/types/simple-xy-line-chart.js","webpack:///./src/charts/types/line-chart.js","webpack:///./node_modules/enumify/lib/enumify.js","webpack:///./src/charts/chart-type.js","webpack:///./src/graph.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Chart","data","_classCallCheck","this","_data","_outputJson","size","height","undefined","width","x","xs","columns","names","types","groups","type","labels","point","show","axis","rotated","label","max","min","y","grid","lines","legend","position","tooltip","grouped","subchart","zoom","enabled","bar","ratio","donut","title","dataJson","JSON","parse","push","concat","_toConsumableArray","grammar","match","RegExp","option","toLowerCase","split","Number","text","dataColumn","margin","_es6Error","InvalidGrammarError","message","arguments","length","_possibleConstructorReturn","__proto__","getPrototypeOf","ExtendableError","self","ReferenceError","_typeof","_extendableBuiltin","cls","ExtendableBuiltin","apply","create","constructor","writable","setPrototypeOf","_extendableBuiltin2","instance","Constructor","TypeError","_this","Error","captureStackTrace","stack","subClass","superClass","_inherits","InvalidOperationError","_chart","ScatterPlot","StackedAreaChart","_get","areaSplineDataLabel","areaDataLabel","labelList","map","e","trim","SplineChart","DonutChart","chartTitle","StackedBarChart","AreaChart","MultipleXYLineChart","p1","p2","PieChart","BarChart","widthValue","barWidthPixels","barWidthRatio","StepChart","_areaStepDataLabel","_stepDataLabel","SimpleXYLineChart","xAxisDataLabel","LineChart","Symbol","_typeof2","iterator","obj","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","copyProperties","INITIALIZED","Enum","instanceProperties","arg","Array","isArray","_enumValuesFromArray","_enumValuesFromObject","freeze","enumValues","arr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","_pushEnumValue","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","enumValue","ordinal","find","source","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOwnPropertyNames","desc","getOwnPropertyDescriptor","_enumify","ChartType","initEnum","Graph","grammarParser","GrammarParser","chartType","enumValueOf","LINE_CHART","datasource","SIMPLE_XY_LINE_CHART","STEP_CHART","BAR_CHART","PIE_CHART","COMBINATION_CHART","MULTIPLE_XY_LINE_CHART","AREA_CHART","STACKED_BAR_CHART","DONUT_CHART","SPLINE_CHART","LINE_CHART_WITH_REGIONS","STACKED_AREA_CHART","SCATTER_PLOT","GAUGE_CHART","do","generateJson","verifyStructure","chartTypeExtract","slice","verifyChartType","verifyDatasource","_graph"],"mappings":"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","file":"graphjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","export default class Chart {\n\n\t/**\n\t * Creates an instance of the Chart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tthis._data = data\n\n\t\t// Define output JSON\n\t\tthis._outputJson = {\n\t\t\t'size': {\n\t\t\t\t'height': undefined,\n\t\t\t\t'width': undefined\n\t\t\t},\n\t\t\t'data': {\n\t\t\t\t'x': undefined,\n\t\t\t\t'xs': {},\n\t\t\t\t'columns': [],\n\t\t\t\t'names': {},\n\t\t\t\t'types': {},\n\t\t\t\t'groups': [],\n\t\t\t\t'type': undefined,\n\t\t\t\t'labels': false\n\t\t\t},\n\t\t\t'point': {\n\t\t\t\t'show': true\n\t\t\t},\n\t\t\t'axis': {\n\t\t\t\t'rotated': false,\n\t\t\t\t'x': {\n\t\t\t\t\t'label': undefined,\n\t\t\t\t\t'max': undefined,\n\t\t\t\t\t'min': undefined\n\t\t\t\t},\n\t\t\t\t'y': {\n\t\t\t\t\t'label': undefined,\n\t\t\t\t\t'max': undefined,\n\t\t\t\t\t'min': undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\t'grid': {\n\t\t\t\t'x': {\n\t\t\t\t\t'show': false,\n\t\t\t\t\t'lines': []\n\t\t\t\t},\n\t\t\t\t'y': {\n\t\t\t\t\t'show': false,\n\t\t\t\t\t'lines': []\n\t\t\t\t}\n\t\t\t},\n\t\t\t'legend': {\n\t\t\t\t'show': true,\n\t\t\t\t'position': 'bottom'\n\t\t\t},\n\t\t\t'tooltip': {\n\t\t\t\t'show': true,\n\t\t\t\t'grouped': true\n\t\t\t},\n\t\t\t'subchart': {\n\t\t\t\t'show': false\n\t\t\t},\n\t\t\t'zoom': {\n\t\t\t\t'enabled': false\n\t\t\t},\n\t\t\t'bar': {\n\t\t\t\t'width': {\n\t\t\t\t\t'ratio': undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\t'donut': {\n\t\t\t\t'title': undefined\n\t\t\t}\n\t\t}\n\n\t\t// Add _data\n\t\tlet dataJson = JSON.parse(this._data)\n\t\tfor (let i in dataJson) {\n\t\t\tthis._outputJson.data.columns.push([i, ...dataJson[i]])\n\t\t}\n\t}\n\n\t/**\n\t * Alter the parameters of the charts using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the charts.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (grammar.match(new RegExp('(show|hide) grid [xXyY]'))) {\n\t\t\tlet option = grammar.match(new RegExp('(show|hide)'))[0]\n\t\t\tlet axis = grammar.match(new RegExp('[xXyY]'))[0]\n\t\t\tif (axis.toLowerCase() === 'x') {\n\t\t\t\tthis._outputJson.grid.x.show = (option === 'show')\n\t\t\t} else {\n\t\t\t\tthis._outputJson.grid.y.show = (option === 'show')\n\t\t\t}\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('set gridline [xXyY] at [\\\\d]+ as [0-9a-zA-Z\\\\-]+'))) {\n\t\t\tlet axis = grammar.match(new RegExp('gridline [xXyY] at'))[0].split(' ')[1]\n\t\t\tlet position = grammar.match(new RegExp('at [\\\\d]+ as'))[0].split(' ')[1]\n\t\t\tlet label = grammar.match(new RegExp('as [0-9a-zA-Z\\\\-]+'))[0].split(' ')[1]\n\t\t\tif (axis.toLowerCase() === 'x') {\n\t\t\t\tthis._outputJson.grid.x.lines.push({\n\t\t\t\t\t'value': Number(position),\n\t\t\t\t\t'text': label\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis._outputJson.grid.y.lines.push({\n\t\t\t\t\t'value': Number(position),\n\t\t\t\t\t'text': label\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('set [0-9a-zA-Z\\\\-]+ data label as [0-9a-zA-Z\\\\-]+'))) {\n\t\t\tlet dataColumn = grammar.match(new RegExp('set [0-9a-zA-Z\\\\-]+ data'))[0].split(' ')[1]\n\t\t\tlet label = grammar.match(new RegExp('as [0-9a-zA-Z\\\\-]+'))[0].split(' ')[1]\n\t\t\tthis._outputJson.data.names[dataColumn] = label\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('set [xXyY] axis label as [0-9a-zA-Z\\\\-]+'))) {\n\t\t\tlet axis = grammar.match(new RegExp('[xXyY]'))[0]\n\t\t\tlet label = grammar.match(new RegExp('as [0-9a-zA-Z\\\\-]+'))[0].split(' ')[1]\n\t\t\tif (axis.toLowerCase() === 'x') {\n\t\t\t\tthis._outputJson.axis.x.label = label\n\t\t\t} else {\n\t\t\t\tthis._outputJson.axis.y.label = label\n\t\t\t}\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('set [xXyY] axis (max|min) as [-]?[\\\\d]+'))) {\n\t\t\tlet axis = grammar.match(new RegExp('[xXyY]'))[0]\n\t\t\tlet margin = grammar.match(new RegExp('axis (max|min) as'))[0].split(' ')[1]\n\t\t\tlet value = grammar.match(new RegExp('as [-]?[\\\\d]+'))[0].split(' ')[1]\n\t\t\tif (axis.toLowerCase() === 'x') {\n\t\t\t\tif (margin.toLowerCase() === 'max') {\n\t\t\t\t\tthis._outputJson.axis.x.max = Number(value)\n\t\t\t\t} else {\n\t\t\t\t\tthis._outputJson.axis.x.min = Number(value)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (margin.toLowerCase() === 'max') {\n\t\t\t\t\tthis._outputJson.axis.y.max = Number(value)\n\t\t\t\t} else {\n\t\t\t\t\tthis._outputJson.axis.y.min = Number(value)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(show|hide) tooltip'))) {\n\t\t\tlet option = grammar.match(new RegExp('(show|hide)'))[0]\n\t\t\tthis._outputJson.tooltip.show = (option === 'show')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(group|ungroup) tooltip'))) {\n\t\t\tlet option = grammar.match(new RegExp('(group|ungroup)'))[0]\n\t\t\tthis._outputJson.tooltip.grouped = (option === 'group')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(show|hide) points'))) {\n\t\t\tlet option = grammar.match(new RegExp('(show|hide)'))[0]\n\t\t\tthis._outputJson.point.show = (option === 'show')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(show|hide) data labels'))) {\n\t\t\tlet option = grammar.match(new RegExp('(show|hide)'))[0]\n\t\t\tthis._outputJson.data.labels = (option === 'show')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(show|hide) legend'))) {\n\t\t\tlet option = grammar.match(new RegExp('(show|hide)'))[0]\n\t\t\tthis._outputJson.legend.show = (option === 'show')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(show|hide) subchart'))) {\n\t\t\tlet option = grammar.match(new RegExp('(show|hide)'))[0]\n\t\t\tthis._outputJson.subchart.show = (option === 'show')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(enable|disable) zoom'))) {\n\t\t\tlet option = grammar.match(new RegExp('(enable|disable)'))[0]\n\t\t\tthis._outputJson.zoom.enabled = (option === 'enable')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('(enable|disable) rotate'))) {\n\t\t\tlet option = grammar.match(new RegExp('(enable|disable)'))[0]\n\t\t\tthis._outputJson.axis.rotated = (option === 'enable')\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('move legend to (right|bottom)'))) {\n\t\t\tlet option = grammar.match(new RegExp('(left|right|top|bottom)'))[0]\n\t\t\tthis._outputJson.legend.position = option\n\t\t\treturn true\n\t\t} else if (grammar.match(new RegExp('set (height|width) as [\\\\d]+'))) {\n\t\t\tlet option = grammar.match(new RegExp('(height|width)'))[0]\n\t\t\tlet value = grammar.match(new RegExp('as [\\\\d]+'))[0].split(' ')[1]\n\t\t\tif (option.toLowerCase() === 'height') {\n\t\t\t\tthis._outputJson.size.height = Number(value)\n\t\t\t} else {\n\t\t\t\tthis._outputJson.size.width = Number(value)\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t\telse {\n\t\t\treturn false\n\t\t}\n\t}\n\n\t/**\n\t * Return the JSON output string of the constructed charts.\n\t * @returns {string}\n\t */\n\tgenerateJson() {\n\t\treturn this._outputJson\n\t}\n}","import ExtendableError from 'es6-error'\n\n/**\n * Thrown when the grammar is invalid.\n */\nexport default class InvalidGrammarError extends ExtendableError {\n\n\t/**\n\t * Creates an instance of InvalidGrammarError.\n\t * @param {string} message - Error message.\n\t */\n\tconstructor(message = 'Invalid grammar') {\n\t\tsuper(message)\n\t}\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    cls.apply(this, arguments);\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n  _inherits(ExtendableError, _extendableBuiltin2);\n\n  function ExtendableError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, ExtendableError);\n\n    // extending Error is weird and does not propagate `message`\n    var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n    Object.defineProperty(_this, 'message', {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(_this, 'name', {\n      configurable: true,\n      enumerable: false,\n      value: _this.constructor.name,\n      writable: true\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(_this, _this.constructor);\n      return _possibleConstructorReturn(_this);\n    }\n\n    Object.defineProperty(_this, 'stack', {\n      configurable: true,\n      enumerable: false,\n      value: new Error(message).stack,\n      writable: true\n    });\n    return _this;\n  }\n\n  return ExtendableError;\n}(_extendableBuiltin(Error));\n\nexport default ExtendableError;\n","import ExtendableError from 'es6-error'\n\n/**\n * Thrown when the operation called for was not implemented / relevant for the context.\n */\nexport default class InvalidOperationError extends ExtendableError {\n\n\t/**\n\t * Creates an instance of InvalidOperationError.\n\t * @param {string} message - Error message.\n\t */\n\tconstructor(message = 'Invalid operation') {\n\t\tsuper(message)\n\t}\n}","import Chart from '../chart'\n\n/**\n * Represents a Scatter Plot.\n */\nexport default class ScatterPlot extends Chart {\n\n\t/**\n\t * Creates an instance of the ScatterPlot class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\n\t\t// Set charts types as Scatter Plot\n\t\tthis._outputJson.data.type = 'scatter'\n\t}\n\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Stacked Area Chart.\n */\nexport default class StackedAreaChart extends Chart {\n\n\t/**\n\t * Creates an instance of the StackedAreaChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area-spline'))) {\n\t\t\t\tlet areaSplineDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area-spline'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.types[areaSplineDataLabel] = 'area-spline'\n\t\t\t\treturn true\n\t\t\t} else if (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area'))) {\n\t\t\t\tlet areaDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.types[areaDataLabel] = 'area'\n\t\t\t\treturn true\n\t\t\t} else if (grammar.match(new RegExp('group [0-9a-zA-Z\\\\-]+[\\\\s]*(,[\\\\s]*)+[0-9a-zA-Z\\\\-]+'))) {\n\t\t\t\tlet labelList = grammar.match(new RegExp(' [0-9a-zA-Z\\\\-]+[\\\\s]*(,[\\\\s]*)+[0-9a-zA-Z\\\\-]+'))[0].split(',')\n\t\t\t\tlabelList = labelList.map(e => e.trim())\n\t\t\t\tthis._outputJson.data.groups.push(labelList)\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\n\n/**\n * Represents a Spline Chart.\n */\nexport default class SplineChart extends Chart {\n\n\t/**\n\t * Creates an instance of the SplineChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\n\t\t// Set types as Spline Chart\n\t\tthis._outputJson.data.type = 'spline'\n\t}\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Donut Chart.\n */\nexport default class DonutChart extends Chart {\n\n\t/**\n\t * Creates an instance of the DonutChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\n\t\t// Set charts types as Donut Chart\n\t\tthis._outputJson.data.type = 'donut'\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('set title as [0-9a-zA-Z\\\\-]+'))) {\n\t\t\t\tlet chartTitle = grammar.match(new RegExp('as [0-9a-zA-Z\\\\-]+'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.donut.title = chartTitle\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Stacked Bar Chart.\n */\nexport default class StackedBarChart extends Chart {\n\n\t/**\n\t * Creates an instance of the StackedBarChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\n\t\t// Set types as Bar Chart\n\t\tthis._outputJson.data.type = 'bar'\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('group [0-9a-zA-Z\\\\-]+[\\\\s]*(,[\\\\s]*)+[0-9a-zA-Z\\\\-]+'))) {\n\t\t\t\tlet labelList = grammar.match(new RegExp(' [0-9a-zA-Z\\\\-]+[\\\\s]*(,[\\\\s]*)+[0-9a-zA-Z\\\\-]+'))[0].split(',')\n\t\t\t\tlabelList = labelList.map(e => e.trim())\n\t\t\t\tthis._outputJson.data.groups.push(labelList)\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents an Area Chart.\n */\nexport default class AreaChart extends Chart {\n\n\t/**\n\t * Creates an instance of the AreaChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area-spline'))) {\n\t\t\t\tlet areaSplineDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area-spline'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.types[areaSplineDataLabel] = 'area-spline'\n\t\t\t\treturn true\n\t\t\t} else if (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area'))) {\n\t\t\t\tlet areaDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.types[areaDataLabel] = 'area'\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Multiple XY line Chart.\n */\nexport default class MultipleXYLineChart extends Chart {\n\n\t/**\n\t * Creates an instance of the MultipleXYLineChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('set [0-9a-zA-Z\\\\-]+ for [0-9a-zA-Z\\\\-]+'))) {\n\t\t\t\tlet p1 = grammar.match(new RegExp('set [0-9a-zA-Z\\\\-]+ for'))[0].split(' ')[1]\n\t\t\t\tlet p2 = grammar.match(new RegExp('for [0-9a-zA-Z\\\\-]+'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.xs[p1] = p2\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\n\n/**\n * Represents a Pie Chart.\n */\nexport default class PieChart extends Chart {\n\n\t/**\n\t * Creates an instance of the PieChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\n\t\t// Set charts types as Pie\n\t\tthis._outputJson.data.type = 'pie'\n\t}\n\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Bar Chart.\n */\nexport default class BarChart extends Chart {\n\n\t/**\n\t * Creates an instance of the BarChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\n\t\t// Set to bar charts\n\t\tthis._outputJson.data.type = 'bar'\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('set bar width as \\\\d+(\\\\.\\\\d+)*( pixels)?'))) {\n\t\t\t\tlet widthValue = grammar.match(new RegExp('set bar width as \\\\d+(\\\\.\\\\d+)*'))[0].split(' ')[4]\n\t\t\t\tif (grammar.match(new RegExp('pixels'))) {\n\t\t\t\t\tlet barWidthPixels = Number(widthValue)\n\t\t\t\t\tthis._outputJson['bar'] = {\n\t\t\t\t\t\t'width': barWidthPixels\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet barWidthRatio = Number(widthValue)\n\t\t\t\t\tthis._outputJson['bar'] = {\n\t\t\t\t\t\t'width': {\n\t\t\t\t\t\t\t'ratio': barWidthRatio\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Step Chart.\n */\nexport default class StepChart extends Chart {\n\n\t/**\n\t * Creates an instance of the StepChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area-step'))) {\n\t\t\t\tthis._areaStepDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as area-step'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.types[this._areaStepDataLabel] = 'area-step'\n\t\t\t\treturn true\n\t\t\t} else if (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as step'))) {\n\t\t\t\tthis._stepDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as step'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.types[this._stepDataLabel] = 'step'\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\nimport InvalidGrammarError from '../../errors/invalid-grammar-error'\n\n/**\n * Represents a Simple XY Line Chart.\n */\nexport default class SimpleXYLineChart extends Chart {\n\n\t/**\n\t * Creates an instance of the SimpleXYLineChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\t}\n\n\t/**\n\t * Alter the parameters of the chart using the provided grammar.\n\t * @param {string} grammar - Simple grammar string describing the chart.\n\t * @returns {boolean} - Returns true if the grammar is parsed.\n\t */\n\tdo(grammar) {\n\t\tif (!super.do(grammar)) {\n\t\t\tif (grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as [xX]'))) {\n\t\t\t\tlet xAxisDataLabel = grammar.match(new RegExp('where [0-9a-zA-Z\\\\-]+ as'))[0].split(' ')[1]\n\t\t\t\tthis._outputJson.data.x = xAxisDataLabel\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t}\n\t}\n}","import Chart from '../chart'\n\n/**\n * Represents a Line Chart.\n */\nexport default class LineChart extends Chart {\n\n\t/**\n\t * Creates an instance of the LineChart class\n\t * @param {string} data - JSON string containing the data columns.\n\t */\n\tconstructor(data) {\n\t\tsuper(data)\n\t}\n\n}","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.copyProperties = copyProperties;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar INITIALIZED = Symbol();\n\n/**\n * This is an abstract class that is not intended to be\n * used directly. Extend it to turn your class into an enum\n * (initialization is performed via `MyClass.initEnum()`).\n */\n\nvar Enum = exports.Enum = function () {\n    /**\n     * `initEnum()` closes the class. Then calling this constructor\n     * throws an exception.\n     * \n     * If your subclass has a constructor then you can control\n     * what properties are added to `this` via the argument you\n     * pass to `super()`. No arguments are fine, too.\n     */\n\n    function Enum() {\n        var instanceProperties = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];\n\n        _classCallCheck(this, Enum);\n\n        // new.target would be better than this.constructor,\n        // but isn’t supported by Babel\n        if ({}.hasOwnProperty.call(this.constructor, INITIALIZED)) {\n            throw new Error('Enum classes can’t be instantiated');\n        }\n        if ((typeof instanceProperties === 'undefined' ? 'undefined' : _typeof(instanceProperties)) === 'object' && instanceProperties !== null) {\n            copyProperties(this, instanceProperties);\n        }\n    }\n    /**\n     * Set up the enum, close the class.\n     * \n     * @param arg Either an object whose properties provide the names\n     * and values (which must be mutable objects) of the enum constants.\n     * Or an Array whose elements are used as the names of the enum constants\n     * The values are create by instantiating the current class.\n     */\n\n    _createClass(Enum, [{\n        key: 'toString',\n\n        /**\n         * Default `toString()` method for enum constant.\n         */\n        value: function toString() {\n            return this.constructor.name + '.' + this.name;\n        }\n    }], [{\n        key: 'initEnum',\n        value: function initEnum(arg) {\n            Object.defineProperty(this, 'enumValues', {\n                value: [],\n                configurable: false,\n                writable: false,\n                enumerable: true\n            });\n            if (Array.isArray(arg)) {\n                this._enumValuesFromArray(arg);\n            } else {\n                this._enumValuesFromObject(arg);\n            }\n            Object.freeze(this.enumValues);\n            this[INITIALIZED] = true;\n            return this;\n        }\n    }, {\n        key: '_enumValuesFromArray',\n        value: function _enumValuesFromArray(arr) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var key = _step.value;\n\n                    this._pushEnumValue(new this(), key);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_enumValuesFromObject',\n        value: function _enumValuesFromObject(obj) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = Object.keys(obj)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var key = _step2.value;\n\n                    var value = new this(obj[key]);\n                    this._pushEnumValue(value, key);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_pushEnumValue',\n        value: function _pushEnumValue(enumValue, name) {\n            enumValue.name = name;\n            enumValue.ordinal = this.enumValues.length;\n            Object.defineProperty(this, name, {\n                value: enumValue,\n                configurable: false,\n                writable: false,\n                enumerable: true\n            });\n            this.enumValues.push(enumValue);\n        }\n\n        /**\n         * Given the name of an enum constant, return its value.\n         */\n\n    }, {\n        key: 'enumValueOf',\n        value: function enumValueOf(name) {\n            return this.enumValues.find(function (x) {\n                return x.name === name;\n            });\n        }\n\n        /**\n         * Make enum classes iterable\n         */\n\n    }, {\n        key: Symbol.iterator,\n        value: function value() {\n            return this.enumValues[Symbol.iterator]();\n        }\n    }]);\n\n    return Enum;\n}();\n\nfunction copyProperties(target, source) {\n    // Ideally, we’d use Reflect.ownKeys() here,\n    // but I don’t want to depend on a polyfill\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = Object.getOwnPropertyNames(source)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var key = _step3.value;\n\n            var desc = Object.getOwnPropertyDescriptor(source, key);\n            Object.defineProperty(target, key, desc);\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n\n    return target;\n}","import {Enum} from 'enumify'\n\n/**\n * Define the types of charts\n *\n * LINE_CHART |\n * SIMPLE_XY_LINE_CHART |\n * STEP_CHART |\n * BAR_CHART |\n * PIE_CHART |\n * COMBINATION_CHART |\n * MULTIPLE_XY_LINE_CHART |\n * AREA_CHART |\n * STACKED_BAR_CHART |\n * DONUT_CHART |\n * SPLINE_CHART |\n * LINE_CHART_WITH_REGIONS |\n * STACKED_AREA_CHART |\n * SCATTER_PLOT |\n * GUAGE_CHART |\n */\nexport default class ChartType extends Enum {\n}\n\nChartType.initEnum([\n\t'LINE_CHART',\n\t'SIMPLE_XY_LINE_CHART',\n\t'STEP_CHART',\n\t'BAR_CHART',\n\t'PIE_CHART',\n\t'COMBINATION_CHART',\n\t'MULTIPLE_XY_LINE_CHART',\n\t'AREA_CHART',\n\t'STACKED_BAR_CHART',\n\t'DONUT_CHART',\n\t'SPLINE_CHART',\n\t'LINE_CHART_WITH_REGIONS',\n\t'STACKED_AREA_CHART',\n\t'SCATTER_PLOT',\n\t'GAUGE_CHART'\n])","import ChartType from './charts/chart-type'\nimport LineChart from './charts/types/line-chart'\nimport SimpleXYLineChart from './charts/types/simple-xy-line-chart'\nimport StepChart from './charts/types/step-chart'\nimport BarChart from './charts/types/bar-chart'\nimport PieChart from './charts/types/pie-chart'\nimport MultipleXYLineChart from './charts/types/multiple-xy-line-chart'\nimport AreaChart from './charts/types/area-chart'\nimport StackedBarChart from './charts/types/stacked-bar-chart'\nimport DonutChart from './charts/types/donut-chart'\nimport SplineChart from './charts/types/spline-chart'\nimport StackedAreaChart from './charts/types/stacked-area-chart'\nimport ScatterPlot from './charts/types/scatter-plot'\nimport InvalidGrammarError from './errors/invalid-grammar-error'\nimport InvalidOperationError from './errors/invalid-operation-error'\n\n/**\n * Graph is the base class of all operations withing the GraphJS.\n * It acts as a factory-pattern for creating any types of charts.\n */\nexport default class Graph {\n\n\t/**\n\t * Creates an instance of the class Graph\n\t * @param {string} grammar - Initial grammar provided to initiate the class.\n\t * This should be in the form of : generate <GRAPH_TYPE> for <DATASOURCE>\n\t */\n\tconstructor(grammar) {\n\t\t/**\n\t\t * Holds the instance of the charts types that was created within the object with the initial grammar.\n\t\t * @types {Chart}\n\t\t * @private\n\t\t */\n\t\tthis._chart = undefined\n\n\t\t// Validate and parse the grammar\n\t\tlet grammarParser = new GrammarParser(grammar)\n\n\t\tlet chartType = grammarParser.chartType\n\t\tswitch (ChartType.enumValueOf(chartType)) {\n\t\tcase ChartType.LINE_CHART:\n\t\t\tthis._chart = new LineChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.SIMPLE_XY_LINE_CHART:\n\t\t\tthis._chart = new SimpleXYLineChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.STEP_CHART:\n\t\t\tthis._chart = new StepChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.BAR_CHART:\n\t\t\tthis._chart = new BarChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.PIE_CHART:\n\t\t\tthis._chart = new PieChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.COMBINATION_CHART:\n\t\t\tthrow new InvalidOperationError()\n\t\t\t// this._chart = new CombinationChart(grammarParser.datasource)\n\t\t\t// break\n\t\tcase ChartType.MULTIPLE_XY_LINE_CHART:\n\t\t\tthis._chart = new MultipleXYLineChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.AREA_CHART:\n\t\t\tthis._chart = new AreaChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.STACKED_BAR_CHART:\n\t\t\tthis._chart = new StackedBarChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.DONUT_CHART:\n\t\t\tthis._chart = new DonutChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.SPLINE_CHART:\n\t\t\tthis._chart = new SplineChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.LINE_CHART_WITH_REGIONS:\n\t\t\tthrow new InvalidOperationError()\n\t\t\t// this._chart = new LineChartWithRegions(grammarParser.datasource)\n\t\t\t// break\n\t\tcase ChartType.STACKED_AREA_CHART:\n\t\t\tthis._chart = new StackedAreaChart(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.SCATTER_PLOT:\n\t\t\tthis._chart = new ScatterPlot(grammarParser.datasource)\n\t\t\tbreak\n\t\tcase ChartType.GAUGE_CHART:\n\t\t\tthrow new InvalidOperationError()\n\t\t\t// this._chart = new GaugeChart(grammarParser.datasource)\n\t\t\t// break\n\t\t}\n\t}\n\n\t/**\n\t * Parse the grammar given by the user.\n\t * @param grammar\n\t * @returns {boolean}\n\t */\n\tdo(grammar) {\n\t\treturn this._chart.do(grammar)\n\t}\n\n\t/**\n\t * Return the JSON output string created by parsing the input grammar.\n\t * @returns {string}\n\t */\n\tgenerateJson() {\n\t\treturn this._chart.generateJson()\n\t}\n}\n\n/**\n * Does the initial grammar parsing.\n */\nclass GrammarParser {\n\n\t/**\n\t * Creates an instance of the class GrammarParser\n\t * @param {string} grammar - Initial grammar provided to initiate the class.\n\t * This should be in the form of : generate <GRAPH_TYPE> for <DATASOURCE>\n\t */\n\tconstructor(grammar) {\n\t\tthis.grammar = grammar\n\t\tthis.chartType = undefined\n\t\tthis.datasource = undefined\n\n\t\t// Verify the basic structure of the grammar\n\t\tif (GrammarParser.verifyStructure(grammar)) {\n\t\t\tlet chartTypeExtract = grammar.match(new RegExp('generate [A-Z_]+ for'))[0]\n\t\t\tthis.chartType = chartTypeExtract.slice(9, chartTypeExtract.length - 4)\n\t\t\tthis.datasource = grammar.match(new RegExp('for {.*}'))[0].slice(4)\n\n\t\t\t// Verify the charts types and the datasource\n\t\t\tif (!GrammarParser.verifyChartType(this.chartType) || !GrammarParser.verifyDatasource(this.datasource)) {\n\t\t\t\tthrow new InvalidGrammarError()\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InvalidGrammarError()\n\t\t}\n\t}\n\n\t/**\n\t * Verify the syntactical and the symantic validity of the whole grammar sentence.\n\t * @param grammar\n\t * @returns {boolean}\n\t */\n\tstatic verifyStructure(grammar) {\n\t\treturn grammar.match(new RegExp('generate [A-Z_]+ for {.*}'))\n\t}\n\n\t/**\n\t * Verify the vaidity of the charts types.\n\t * @param chartType\n\t * @returns {boolean}\n\t */\n\tstatic verifyChartType(chartType) {\n\t\treturn ChartType.enumValueOf(chartType) instanceof ChartType\n\t}\n\n\t/**\n\t * Verify the validity of the datasource.\n\t * @param grammar\n\t * @returns {boolean}\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tstatic verifyDatasource(grammar) {\n\t\t// TODO : Verify datasource\n\t\treturn true\n\t}\n}","import Graph from './graph'\n\nexport {Graph}"],"sourceRoot":""}